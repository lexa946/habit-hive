"""add

Revision ID: b25179270007
Revises: 
Create Date: 2025-04-22 20:17:23.616041

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b25179270007'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Сначала создаем таблицу users без внешних ключей
    op.create_table('users',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('password_hash', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('team_id', sa.UUID(), nullable=True),
        sa.Column('current_streak', sa.Integer(), nullable=False),
        sa.Column('max_streak', sa.Integer(), nullable=False),
        sa.Column('last_completed_date', sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)

    # Затем создаем таблицу teams без внешних ключей
    op.create_table('teams',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('owner_id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('daily_completions', sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )

    # Добавляем внешние ключи после создания обеих таблиц
    op.create_foreign_key('fk_teams_owner_id_users', 'teams', 'users', ['owner_id'], ['id'])
    op.create_foreign_key('fk_users_team_id_teams', 'users', 'teams', ['team_id'], ['id'])

    # Создаем остальные таблицы
    op.create_table('congratulations',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('message', sa.String(), nullable=False),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('is_read', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_congratulations_id'), 'congratulations', ['id'], unique=False)

    op.create_table('habits',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('team_id', sa.UUID(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('completed_at', sa.Date(), nullable=True),
        sa.Column('is_completed', sa.Boolean(), nullable=False),
        sa.Column('target_date', sa.Date(), nullable=True),
        sa.Column('mastery_progress', sa.Integer(), nullable=False),
        sa.Column('mastery_goal', sa.Integer(), nullable=False),
        sa.Column('completed_count', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('user_settings',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('theme', sa.String(), nullable=False),
        sa.Column('daily_reminder', sa.Boolean(), nullable=False),
        sa.Column('reminder_time', sa.Time(), nullable=False),
        sa.Column('default_mastery_goal', sa.Integer(), nullable=False),
        sa.Column('default_period', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )

    op.create_table('tracking',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('habit_id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(['habit_id'], ['habits.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('habit_id', 'user_id', 'date', name='uix_tracking_unique_per_day')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tracking')
    op.drop_table('user_settings')
    op.drop_table('habits')
    op.drop_index(op.f('ix_congratulations_id'), table_name='congratulations')
    op.drop_table('congratulations')
    op.drop_constraint('fk_users_team_id_teams', 'users', type_='foreignkey')
    op.drop_constraint('fk_teams_owner_id_users', 'teams', type_='foreignkey')
    op.drop_table('teams')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
